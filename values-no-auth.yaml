global:
  image:
    ## @param global.image.registry Can be used to set container image registry.
    registry: cache.artifactory.global/third-party
    ## @param global.image.tag defines the tag / version which should be used in the most of the apps.
    # renovate: datasource=github-releases depName=camunda/camunda-platform
    tag: 8.4.0
    ## @param global.image.pullPolicy defines the image pull policy which should be used https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
    pullPolicy: IfNotPresent
    ## @param global.image.pullSecrets can be used to configure image pull secrets https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
    pullSecrets: []
  multitenancy:
    enabled: false
  ingress:
    enabled: false
    className: nginx
    annotations:
      ingress.kubernetes.io/rewrite-target: "/"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    host: ""
    tls:
      enabled: false
      secretName: camunda-platform

  elasticsearch:
    disableExporter: true

  zeebeClusterName: "{{ .Release.Name }}-zeebe"
  ## @param global.zeebePort defines the port which is used for the Zeebe Gateway. This port accepts the GRPC Client messages and forwards them to the Zeebe Brokers.
  zeebePort: 26500

  # Identity configuration to configure identity specifics on global level, which can be accessed by other sub-charts
  identity:
    # THIS IS A PRE ALPHA FEATURE, DO NOT USE IT.
    ## @skip global.identity.service
    service:
      ## @skip global.identity.service.url
      url:
    keycloak:
      # Identity.keycloak.internal if true, it will configure an extra service with type "ExternalName".
      ## @param global.identity.keycloak.internal It's useful for using existing Keycloak in another namespace with and access it with the combined Ingress.
      internal: false

    ## @extra global.identity.auth configuration, to configure identity authentication setup
    auth:
      ## @param global.identity.auth.enabled if true, enables the identity authentication otherwise basic-auth will be used on all services.
      enabled: false

  multiregion:
    regions: 1
    regionId: 0
    installationType: normal

## @section Zeebe Parameters
## @extra zeebe configuration for the Zeebe sub chart. Contains configuration for the Zeebe broker and related resources.
zeebe:
  enabled: true
  ## @param zeebe.clusterSize defines the amount of brokers (=replicas), which are deployed via helm
  clusterSize: "3"
  ## @param zeebe.partitionCount defines how many zeebe partitions are set up in the cluster
  partitionCount: "3"
  ## @param zeebe.replicationFactor defines how each partition is replicated, the value defines the number of nodes
  replicationFactor: "3"
  ## @extra zeebe.image configuration to configure the zeebe image specifics
  image:
    repository: camumda-zeebee
    tag: 8.4.0
  ## @extra zeebe.env can be used to set extra environment variables in each zeebe broker container
  env:
    - name: ZEEBE_BROKER_DATA_SNAPSHOTPERIOD
      value: "5m"
    - name: ZEEBE_BROKER_DATA_DISK_FREESPACE_REPLICATION
      value: "2GB"
    - name: ZEEBE_BROKER_DATA_DISK_FREESPACE_PROCESSING
      value: "3GB"
  javaOpts: >-
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:HeapDumpPath=/usr/local/zeebe/data
    -XX:ErrorFile=/usr/local/zeebe/data/zeebe_error%p.log
    -XX:+ExitOnOutOfMemoryError
  ## @param zeebe.cpuThreadCount defines how many threads can be used for the processing on each broker pod
  cpuThreadCount: "1"
  ## @param zeebe.ioThreadCount defines how many threads can be used for the exporting on each broker pod
  ioThreadCount: "1"
  resources:
    requests:
      cpu: 100m
      memory: 500Mi
    limits:
      cpu: 200m
      memory: 1000Mi

  persistenceType: disk
  pvcSize: "10Gi"
  pvcAccessModes: ["ReadWriteOnce"]

## @section Zeebe Gateway Parameters
## @extra Gateway configuration to define properties related to the standalone gateway
zeebe-gateway:
  replicas: 2
  image:
    repository: camumda-zeebee
    tag: 8.4.0
  logLevel: info
  javaOpts: >-
    -XX:+ExitOnOutOfMemoryError

  ## @param zeebe-gateway.env can be used to set extra environment variables in each gateway container
  env: []
  ## @extra zeebe-gateway.configMap configuration which will be applied to the mounted config map.
  configMap:
    ## @param zeebe-gateway.configMap.defaultMode can be used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    # See https://github.com/kubernetes/api/blob/master/core/v1/types.go#L1615-L1623
    defaultMode: 0744

  ## @extra zeebe-gateway.serviceAccount configuration for the service account where the gateway pods are assigned to
  serviceAccount:
    ## @param zeebe-gateway.serviceAccount.enabled if true, enables the gateway service account
    enabled: true
    ## @param zeebe-gateway.serviceAccount.name can be used to set the name of the gateway service account
    name: ""
    ## @param zeebe-gateway.serviceAccount.annotations can be used to set the annotations of the gateway service account
    annotations: {}

  ingress:
    enabled: true
    className: nginx
    annotations:
      ingress.kubernetes.io/rewrite-target: "/"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
      nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
      cert-manager.io/cluster-issuer: le-linshare-dev
      kubernetes.io/tls-acme: "true"
    path: /
    host: gateway.camunda.integration-linshare.org
    tls:
      enabled: true
      secretName: camunda-platform-zeebe-gateway

connectors:
  ## @param connectors.enabled if true, the Connectors deployment and its related resources are deployed via a helm release
  enabled: true
  image:
    registry: cache.artifactory.global/third-party
    repository: camumda-connectors-bundle
    tag: 8.4.0
  ## @extra connectors.inbound Switch for inbound mode (e.g., for webhook or polling)
  inbound:
    ## @param connectors.inbound.mode acceptable values: disabled, credentials, or oauth
    mode: credentials
    ## @extra connectors.inbound.auth configuration of the credentials authentication.
    auth:
      ## @param connectors.inbound.auth.existingSecret can be used to configure Secret name that contains connectors password
      existingSecret: "camunda-connectors-auth-credentials"

  ## @extra connectors.image configuration to configure the Connectors image specifics
  # https://hub.docker.com/r/camunda/connectors-bundle/tags
  image:
    tag: 8.4.0
  replicas: 1
  resources:
    requests:
      cpu: 1
      memory: 1Gi
    limits:
      cpu: 2
      memory: 2Gi

  ingress:
    enabled: false

operate:
  enabled: false

tasklist:
  enabled: false

optimize:
  enabled: false

identity:
  enabled: false

webModeler:
  enabled: false

postgresql:
  enabled: false

console:
  enabled: false

elasticsearch:
  enabled: false

prometheusServiceMonitor:
  enabled: false